<?php

/**
 * @file
 * CAPx Filters module.
 */

/**
 * Implements hook_menu().
 */
function capx_filters_menu() {
  $items = array();
  $items['admin/config/capx/filters'] = array(
    'title' => 'Filters',
    'page callback' => 'capx_filters_list',
    'file' => 'capx_filters.forms.inc',
    'access arguments' => array('administer capx'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/capx/filters/add'] = array(
    'title' => 'Add New Filter',
    'page callback' => 'drupal_get_form',
    'file' => 'capx_filters.forms.inc',
    'page arguments' => array('capx_filters_edit'),
    'access arguments' => array('administer capx'),
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/config/capx/filters/edit/%'] = array(
    'title' => 'Edit filters',
    'page callback' => 'drupal_get_form',
    'file' => 'capx_filters.forms.inc',
    'page arguments' => array('capx_filters_edit', 5),
    'access arguments' => array('administer capx'),
  );
  $items['admin/config/capx/filters/delete/%'] = array(
    'title' => 'Delete filters',
    'page callback' => 'drupal_get_form',
    'file' => 'capx_filters.forms.inc',
    'page arguments' => array('capx_filters_delete', 5),
    'access arguments' => array('administer capx'),
  );
  return $items;
}

/**
 * Implements hook_capx_entity_presave_alter().
 *
 * @param EntityDrupalWrapper $entity
 *   Entity to be saved.
 * @param array $data
 * @param CAPx\Drupal\Mapper\EntityMapper $mapper
 */
function capx_filters_capx_entity_presave_alter(&$entity, $data, $mapper) {
  $config = $mapper->getConfig();
  if (isset($config['filters'])) {
    foreach ($config['filters'] as $filter) {
      $filter['value'] = strtolower($filter['value']);
      $item = $mapper->getRemoteDataByJsonPath($data, $filter['key']);
      if (is_array($item) && $item && count($item) == 1) {
        $item = reset($item);
      }
      else {
        $item = '';
      }

      // Handles TRUE/FALSE values.
      if (is_bool($item)) {
        if ($item) {
          $item = 'true';
        }
        else {
          $item = 'false';
        }
      }

      $filtered = FALSE;
      switch ($filter['comparison']) {
        case '=':
          if ($item != $filter['value']) {
            $filtered = TRUE;
          }
          break;

        case '>':
          if (((int) $item) <= ((int) $filter['value'])) {
            $filtered = TRUE;
          }
          break;

        case '<':
          if (((int) $item) >= ((int) $filter['value'])) {
            $filtered = TRUE;
          }
          break;

        case 'contains':
          if (strpos($item, $filter['value']) === FALSE) {
            $filtered = TRUE;
          }
          break;
      }


      if ($filter['exclude']) {
        if (!$filtered) {
          $entity->clear();
        }
      }
      else {
        if ($filtered) {
          $entity->clear();
        }
      }
    }
  }
}
